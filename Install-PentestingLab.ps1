# ----------------------------------------------------------
# Global Settings
# ----------------------------------------------------------
# Lab Environment
$LabName = "PentestingLab"
$ServerMemory = 4GB
$ClientMemory = 8GB

# OS Image
$WinSrv2022 = "Windows Server 2022 Standard Evaluation (Desktop Experience)"
$Win10 = "Windows 10 Pro"
$Win11 = "Windows 11 Pro"

# ad.example.local
$DomainName = "ad.example.local"
$DomainAdminUser = "sysadmin"
$DomainAdminPassword = "sysadmin@123"
$LocalAdminUser = "administrator"
$LocalAdminPassword = "admin@123"

# ----------------------------------------------------------
# Lab Install
# ----------------------------------------------------------
$NetBIOSDomainName = $DomainName.Split(".")[0]
$CurrentFolder = (Split-Path $myInvocation.MyCommand.path -Parent)
$PostInstallationFolder = "$CurrentFolder\PostInstallationActivities"

New-LabDefinition -Name $LabName -DefaultVirtualizationEngine HyperV
Add-LabVirtualNetworkDefinition -Name $labName -AddressSpace 192.168.81.0/24

# ----------------------------------------------------------
# Machine Setup (ad.example.local)
# ----------------------------------------------------------
Set-LabInstallationCredential -Username $DomainAdminUser -Password $DomainAdminPassword
Add-LabDomainDefinition -Name $DomainName -AdminUser $DomainAdminUser -AdminPassword $DomainAdminPassword

# Domain Controller
$PostInstallationActivity = Get-LabPostInstallationActivity `
    -ScriptFileName Setup-WIN2022-DC01.ps1 `
    -DependencyFolder $PostInstallationFolder

Add-LabMachineDefinition `
    -Name "WIN2022-DC01" `
    -DomainName $DomainName `
    -Roles RootDC `
    -OperatingSystem $WinSrv2022 `
    -Memory $ServerMemory `
    -IpAddress "192.168.81.3" `
    -PostInstallationActivity $PostInstallationActivity

# File Server
$PostInstallationActivity = Get-LabPostInstallationActivity `
    -ScriptFileName Setup-WIN2022-FS01.ps1 `
    -DependencyFolder $PostInstallationFolder

Add-LabMachineDefinition `
    -Name "WIN2022-FS01" `
    -DomainName $DomainName `
    -Roles FileServer `
    -OperatingSystem $WinSrv2022 `
    -Memory $ServerMemory `
    -IpAddress "192.168.81.4" `
    -PostInstallationActivity $PostInstallationActivity

# Workstation (Windows 10)
$Password = ConvertTo-SecureString $LocalAdminPassword -AsPlainText -Force
$LocalAdmin = New-Object System.Management.Automation.PSCredential $LocalAdminUser, $Password
$PostInstallationActivity = Get-LabPostInstallationActivity `
    -ScriptFileName Setup-WIN10-WS01.ps1 `
    -DependencyFolder $PostInstallationFolder

Add-LabMachineDefinition `
    -Name "WIN10-WS01" `
    -DomainName $DomainName `
    -OperatingSystem $Win10 `
    -Memory $ClientMemory `
    -IpAddress "192.168.81.11" `
    -InstallationUserCredential $LocalAdmin `
    -PostInstallationActivity $PostInstallationActivity

# Workstation (Windows 11)
$PostInstallationActivity = Get-LabPostInstallationActivity `
    -ScriptFileName Setup-WIN11-WS02.ps1 `
    -DependencyFolder $PostInstallationFolder

Add-LabMachineDefinition `
    -Name "WIN11-WS02" `
    -DomainName $DomainName `
    -OperatingSystem $Win11 `
    -Memory $ClientMemory `
    -IpAddress "192.168.81.12" `
    -InstallationUserCredential $LocalAdmin `
    -PostInstallationActivity $PostInstallationActivity

Install-Lab

# ----------------------------------------------------------
# Change Settings (ad.example.local)
# ----------------------------------------------------------
$Password = ConvertTo-SecureString $DomainAdminPassword -AsPlainText -Force
$DomainAdmin = New-Object System.Management.Automation.PSCredential "$NetBIOSDomainName\$DomainAdminUser", $Password

Function EnableRDPUser {net.exe localgroup "Remote Desktop Users" "$NetBIOSDomainName\Domain Users" /add}
Function CreateFolder
{
    mkdir "C:\works"
    Set-MpPreference -ExclusionPath "C:\works\"
}

# Delete automatically generated files (e.g. unattend.xml) during deployment.
Remove-LabDeploymentFiles

foreach ($Machine in (Get-LabMachineDefinition -All))
{
    $Computer = $Machine.Name

    # Disable AutoLogon if it is enabled.
    if (Test-LabAutoLogon $Computer)
    {
        Disable-LabAutoLogon $Computer
    }

    # Create a working folder.
    Invoke-LabCommand -ActivityName "CreateFolder" `
        -ComputerName $Computer `
        -ScriptBlock {CreateFolder} `
        -Function (Get-Command -Name CreateFolder)

    # Empty Roles is considered a workstation.
    if ([string]::IsNullOrEmpty($Machine.Roles))
    {
        Invoke-LabCommand -ActivityName "EnableRDPUser" `
            -ComputerName $Computer `
            -Credential $DomainAdmin `
            -ScriptBlock {EnableRDPUser} `
            -Variable (Get-Variable -Name NetBIOSDomainName) `
            -Function (Get-Command -Name EnableRDPUser)
    }
}

# ----------------------------------------------------------
# Setup Complete
# ----------------------------------------------------------
Show-LabDeploymentSummary -Detailed
